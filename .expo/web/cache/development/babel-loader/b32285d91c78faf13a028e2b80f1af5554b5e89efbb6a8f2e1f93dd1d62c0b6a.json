{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ListItem from \"../components/ListItem\";\nimport ListItemSeparator from \"../components/ListItemSeparator\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar initialMessages = [{\n  id: 1,\n  title: \"T1\",\n  description: \"D1\",\n  image: require(\"../assets/doctorImages/dr1.jpeg\")\n}, {\n  id: 2,\n  title: \"T2\",\n  description: \"D2\",\n  image: require(\"../assets/doctorImages/dr1.jpeg\")\n}, {\n  id: 3,\n  title: \"T3\",\n  description: \"D3\",\n  image: require(\"../assets/doctorImages/dr1.jpeg\")\n}];\nfunction MessagesScreen(props) {\n  var _useState = useState(initialMessages),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    refreshing = _useState4[0],\n    setRefreshing = _useState4[1];\n  var handleDelete = function handleDelete(message) {\n    setMessages(messages.filter(function (m) {\n      return m.id !== message.id;\n    }));\n  };\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      data: messages,\n      keyExtractor: function keyExtractor(message) {\n        return message.id.toString();\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(ListItem, {\n          title: item.title,\n          subTitle: item.description,\n          image: item.image,\n          onPress: function onPress() {\n            return console.log(\"Message selected\", item);\n          },\n          renderRightActions: function renderRightActions() {\n            return _jsx(ListItemDeleteAction, {\n              onPress: function onPress() {\n                return handleDelete(item);\n              }\n            });\n          }\n        });\n      },\n      ItemSeparatorComponent: ListItemSeparator,\n      refreshing: refreshing,\n      onRefresh: function onRefresh() {\n        setMessages([{\n          id: 1,\n          title: \"T1\",\n          description: \"D1\",\n          image: require(\"../assets/doctorImages/dr1.jpeg\")\n        }, {\n          id: 3,\n          title: \"T3\",\n          description: \"D3\",\n          image: require(\"../assets/doctorImages/dr1.jpeg\")\n        }]);\n      }\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default MessagesScreen;","map":{"version":3,"names":["React","useState","FlatList","SafeAreaView","View","StyleSheet","ListItem","ListItemSeparator","ListItemDeleteAction","jsx","_jsx","initialMessages","id","title","description","image","require","MessagesScreen","props","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","refreshing","setRefreshing","handleDelete","message","filter","m","style","styles","container","children","data","keyExtractor","toString","renderItem","_ref","item","subTitle","onPress","console","log","renderRightActions","ItemSeparatorComponent","onRefresh","create","flex"],"sources":["/Users/ricardonunez/Documents/MobileApp/MobileHealth/app/screens/MessagesScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { FlatList, SafeAreaView, View, StyleSheet } from \"react-native\";\n\nimport ListItem from \"../components/ListItem\";\nimport ListItemSeparator from \"../components/ListItemSeparator\";\nimport ListItemDeleteAction from \"../components/ListItemDeleteAction\";\n\nconst initialMessages = [\n  {\n    id: 1,\n    title: \"T1\",\n    description: \"D1\",\n    image: require(\"../assets/doctorImages/dr1.jpeg\"),\n  },\n  {\n    id: 2,\n    title: \"T2\",\n    description: \"D2\",\n    image: require(\"../assets/doctorImages/dr1.jpeg\"),\n  },\n  {\n    id: 3,\n    title: \"T3\",\n    description: \"D3\",\n    image: require(\"../assets/doctorImages/dr1.jpeg\"),\n  },\n];\n\nfunction MessagesScreen(props) {\n  const [messages, setMessages] = useState(initialMessages);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const handleDelete = (message) => {\n    // Delete the message from messages\n    // uses the filter method on the messages array to create a new array that\n    // excludes the message with the same id as the message parameter.\n    // filter method return a new array and does not modify the original array\n    setMessages(messages.filter((m) => m.id !== message.id));\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <FlatList\n        data={messages}\n        keyExtractor={(message) => message.id.toString()}\n        renderItem={({ item }) => (\n          <ListItem\n            title={item.title}\n            subTitle={item.description}\n            image={item.image}\n            onPress={() => console.log(\"Message selected\", item)}\n            renderRightActions={() => (\n              <ListItemDeleteAction onPress={() => handleDelete(item)} />\n            )}\n          />\n        )}\n        ItemSeparatorComponent={ListItemSeparator}\n        refreshing={refreshing}\n        onRefresh={() => {\n          setMessages([\n            {\n                id: 1,\n                title: \"T1\",\n                description: \"D1\",\n                image: require(\"../assets/doctorImages/dr1.jpeg\"),\n              },\n            {\n              id: 3,\n              title: \"T3\",\n              description: \"D3\",\n              image: require(\"../assets/doctorImages/dr1.jpeg\"),\n            },\n          ]);\n        }}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    }\n})\n\nexport default MessagesScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}