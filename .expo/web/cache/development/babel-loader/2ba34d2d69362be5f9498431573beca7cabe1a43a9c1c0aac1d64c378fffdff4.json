{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport colors from \"../config/colors\";\nimport defaultStyles from \"../config/styles\";\nimport AppText from \"./AppText\";\nimport PickerItem from \"./PickerItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nfunction AppPicker(_ref) {\n  var icon = _ref.icon,\n    items = _ref.items,\n    onSelectItem = _ref.onSelectItem,\n    placeholder = _ref.placeholder,\n    selectedItem = _ref.selectedItem;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  return _jsxs(_Fragment, {\n    children: [_jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsxs(View, {\n        style: styles.container,\n        children: [icon && _jsx(MaterialCommunityIcons, {\n          name: icon,\n          size: 20,\n          color: colors.gray,\n          style: styles.icon\n        }), _jsx(AppText, {\n          style: styles.text,\n          children: selectedItem ? selectedItem.label : placeholder\n        }), _jsx(MaterialCommunityIcons, {\n          name: \"chevron-down\",\n          size: 20,\n          color: colors.gray\n        })]\n      })\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      animationType: \"slide\",\n      children: _jsxs(SafeAreaView, {\n        children: [_jsx(Button, {\n          style: styles.close,\n          title: \"Close\",\n          onPress: function onPress() {\n            return setModalVisible(false);\n          }\n        }), _jsx(FlatList, {\n          data: items,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(PickerItem, {\n              item: item,\n              label: item.label,\n              onPress: function onPress() {\n                setModalVisible(false);\n                onSelectItem(item);\n                console.log(item.label + \"this\");\n              }\n            });\n          }\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.ultraLightGray,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    width: \"100%\",\n    padding: 15,\n    marginVertical: 10\n  },\n  icon: {\n    marginRight: 10\n  },\n  text: {\n    flex: 1\n  }\n});\nexport default AppPicker;","map":{"version":3,"names":["React","useState","View","StyleSheet","TouchableWithoutFeedback","Modal","Button","SafeAreaView","FlatList","MaterialCommunityIcons","colors","defaultStyles","AppText","PickerItem","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AppPicker","_ref","icon","items","onSelectItem","placeholder","selectedItem","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","children","onPress","style","styles","container","name","size","color","gray","text","label","visible","animationType","close","title","data","renderItem","_ref2","item","console","log","create","backgroundColor","ultraLightGray","borderRadius","flexDirection","width","padding","marginVertical","marginRight","flex"],"sources":["/Users/ricardonunez/Documents/MobileApp/MobileHealth/app/components/AppPicker.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport {\n  View,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  Modal,\n  Button,\n  SafeAreaView,\n  FlatList,\n} from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\n\n\nimport colors from \"../config/colors\";\nimport defaultStyles from \"../config/styles\";\nimport AppText from \"./AppText\";\nimport PickerItem from \"./PickerItem\";\n\nfunction AppPicker({ icon, items, onSelectItem, placeholder, selectedItem }) {\n  //[functionName, functionToUpdate ]\n  const [modalVisible, setModalVisible] = useState(false);\n\n  return (\n    <>\n      <TouchableWithoutFeedback onPress={() => setModalVisible(true)}>\n        <View style={styles.container}>\n          {icon && (\n            <MaterialCommunityIcons\n              name={icon}\n              size={20}\n              color={colors.gray}\n              style={styles.icon}\n            />\n          )}\n          {/* If there is a selectedItem, the item will be displayed, else \n              display placeholder \n          */}\n            <AppText style={styles.text}>{selectedItem ? selectedItem.label : placeholder}</AppText>\n \n          <MaterialCommunityIcons\n            name=\"chevron-down\"\n            size={20}\n            color={colors.gray}\n          />\n        </View>\n      </TouchableWithoutFeedback>\n      <Modal visible={modalVisible} animationType=\"slide\">\n        <SafeAreaView>\n          <Button\n            style={styles.close}\n            title=\"Close\"\n            onPress={() => setModalVisible(false)}\n          >\n\n            \n          </Button>\n        {/* \n        When you use data={items} in the FlatList component, the FlatList component iterates through \n        each item in the items array and renders a component for each item using the renderItem prop.\n        In the renderItem function, the item parameter refers to each individual item in the items array.\n        So, when you write renderItem={({ item }) => ...}, you are destructuring the item object from the \n        FlatList component's parameter object and using it to render each item in the list. */}\n          <FlatList\n            data={items}\n            //Uncomment the following line \n            // keyExtractor={(item) => item.value.toString()}\n           // The renderItem props is used to define a function that takes an \n           // item from the \"items\" array and returns a rendered component for each \n           // item in the list\n           // item refers to the array of items set in data \n            renderItem={({ item }) => (\n              <PickerItem\n                 //Generic prop that will be use to render any item \n                item={item}\n                label={item.label}\n                onPress={() => {\n                  setModalVisible(false);\n                  // callback function that is called when an item in the \n                  // FlatList component is selected by the user. It takes the \n                  // selected item as a parameter and does some action with that item.\n                  onSelectItem(item);\n                  console.log(item.label + \"this\");\n                }}\n              />\n            )}\n          />\n        </SafeAreaView>\n      </Modal>\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: colors.ultraLightGray,\n    borderRadius: 25,\n    flexDirection: \"row\",\n    width: \"100%\",\n    padding: 15,\n    marginVertical: 10,\n  },\n  icon: {\n    marginRight: 10,\n  },\n  text: {\n    flex: 1,\n  },\n  \n});\n\nexport default AppPicker;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}